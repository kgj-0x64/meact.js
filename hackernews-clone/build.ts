/**
      * 
      * ! DON'T EDIT Directly!!!
      * Generated by running framework.build.ts
      *  
    */
    import { MeactMeta } from "@meact-framework";
    import * as _mainLayout from "../../server/api/_mainLayout.ts";
import * as upvoted from "../../server/api/upvoted.ts";
import * as threads from "../../server/api/threads.ts";
import * as submitted from "../../server/api/submitted.ts";
import * as noobstories from "../../server/api/noobstories.ts";
import * as noobcomments from "../../server/api/noobcomments.ts";
import * as newpoll from "../../server/api/newpoll.ts";
import * as lists from "../../server/api/lists.ts";
import * as leaders from "../../server/api/leaders.ts";
import * as jobs from "../../server/api/jobs.ts";
import * as index from "../../server/api/index.ts";
import * as hidden from "../../server/api/hidden.ts";
import * as front from "../../server/api/front.ts";
import * as from from "../../server/api/from.ts";
import * as formatdoc from "../../server/api/formatdoc.ts";
import * as forgot from "../../server/api/forgot.ts";
import * as favorites from "../../server/api/favorites.ts";
import * as dmca from "../../server/api/dmca.ts";
import * as changepw from "../../server/api/changepw.ts";
import * as bookmarklet from "../../server/api/bookmarklet.ts";
import * as bestcomments from "../../server/api/bestcomments.ts";
import * as active from "../../server/api/active.ts";

    interface IComponentServerSideHandlers {
      componentName: string;
      metaFn?: MeactMeta;
      loaderFn?: Function;
      actionFn?: Function;
    }
    
    export const mapOfComponentNameToServerSideHandlers: Map<
      string,
      IComponentServerSideHandlers
    > = new Map([
      [
      _mainLayout.componentName,
      {
        "componentName": _mainLayout.componentName, 
        
        loaderFn: _mainLayout.loader,
        
      },
    ],
[
      "upvoted",
      {
        "componentName": upvoted.componentName, 
        metaFn: upvoted.meta,
        
        
      },
    ],
[
      "threads",
      {
        "componentName": threads.componentName, 
        metaFn: threads.meta,
        
        
      },
    ],
[
      "submitted",
      {
        "componentName": submitted.componentName, 
        metaFn: submitted.meta,
        
        
      },
    ],
[
      "noobstories",
      {
        "componentName": noobstories.componentName, 
        metaFn: noobstories.meta,
        
        
      },
    ],
[
      "noobcomments",
      {
        "componentName": noobcomments.componentName, 
        metaFn: noobcomments.meta,
        
        
      },
    ],
[
      "newpoll",
      {
        "componentName": newpoll.componentName, 
        metaFn: newpoll.meta,
        
        
      },
    ],
[
      "lists",
      {
        "componentName": lists.componentName, 
        metaFn: lists.meta,
        
        
      },
    ],
[
      "leaders",
      {
        "componentName": leaders.componentName, 
        metaFn: leaders.meta,
        
        
      },
    ],
[
      "jobs",
      {
        "componentName": jobs.componentName, 
        metaFn: jobs.meta,
        loaderFn: jobs.loader,
        
      },
    ],
[
      "index",
      {
        "componentName": index.componentName, 
        metaFn: index.meta,
        loaderFn: index.loader,
        
      },
    ],
[
      "hidden",
      {
        "componentName": hidden.componentName, 
        metaFn: hidden.meta,
        
        
      },
    ],
[
      "front",
      {
        "componentName": front.componentName, 
        metaFn: front.meta,
        
        
      },
    ],
[
      "from",
      {
        "componentName": from.componentName, 
        metaFn: from.meta,
        
        
      },
    ],
[
      "formatdoc",
      {
        "componentName": formatdoc.componentName, 
        metaFn: formatdoc.meta,
        
        
      },
    ],
[
      "forgot",
      {
        "componentName": forgot.componentName, 
        metaFn: forgot.meta,
        
        
      },
    ],
[
      "favorites",
      {
        "componentName": favorites.componentName, 
        metaFn: favorites.meta,
        
        
      },
    ],
[
      "dmca",
      {
        "componentName": dmca.componentName, 
        metaFn: dmca.meta,
        
        
      },
    ],
[
      "changepw",
      {
        "componentName": changepw.componentName, 
        metaFn: changepw.meta,
        
        
      },
    ],
[
      "bookmarklet",
      {
        "componentName": bookmarklet.componentName, 
        metaFn: bookmarklet.meta,
        
        
      },
    ],
[
      "bestcomments",
      {
        "componentName": bestcomments.componentName, 
        metaFn: bestcomments.meta,
        
        
      },
    ],
[
      "active",
      {
        "componentName": active.componentName, 
        metaFn: active.meta,
        
        
      },
    ],
    ]);